{"version":3,"sources":["services/leader-board-api-service.js","components/Player/Player.js","components/Loading/Loading.js","components/ErrorMessage/ErrorMessage.js","components/App/App.js","index.js"],"names":["LeaderBoardApiService","getLeaderBoardData","fetch","method","headers","then","res","ok","json","e","Promise","reject","getProfilePicture","uid","url","Player","player","position","className","src","alt","username","score","seconds_played","games_won","games_lost","Loading","ErrorMessage","props","App","useState","players","view","error","isLoading","state","setState","handleSort","sort","a","b","getPageData","all","map","el","profile","playerDetails","useEffect","p","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAwBeA,EAxBe,CAC5BC,mBAD4B,WAE1B,OAAOC,MAAM,wEAAyE,CACpFC,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAEjBC,MAAK,SAACC,GAAD,OACLA,EAAIC,GAAiDD,EAAIE,OAAhDF,EAAIE,OAAOH,MAAK,SAACI,GAAD,OAAOC,QAAQC,OAAOF,UAIpDG,kBAZ4B,SAYVC,GAChB,OAAOX,MAAM,4EAAD,OAA6EW,EAA7E,QAAwF,CAClGV,OAAQ,MACRC,QAAS,CACP,eAAgB,eAEjBC,MAAK,SAACC,GAAD,OACLA,EAAIC,GAAiDD,EAAIQ,IAAhDR,EAAIE,OAAOH,MAAK,SAACI,GAAD,OAAOC,QAAQC,OAAOF,W,MCKvCM,MArBf,YAAuC,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAExB,OACE,sBAAsBC,UAAU,cAAhC,UACE,sBAAMA,UAAU,kBAAhB,SAAmCD,IACnC,qBAAKC,UAAU,aAAaC,IAAKH,EAAOF,IAAKM,IAAI,gBACjD,sBAAKF,UAAU,iBAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCF,EAAOK,WACvC,sBAAKH,UAAU,uBAAf,UACE,oBAAGA,UAAU,gBAAb,oBAAqCF,EAAOM,SAC5C,oBAAGJ,UAAU,gBAAb,uBAAwCF,EAAOO,qBAEjD,sBAAKL,UAAU,uBAAf,UACE,oBAAGA,UAAU,gBAAb,mBAAoCF,EAAOQ,aAC3C,oBAAGN,UAAU,gBAAb,qBAAsCF,EAAOS,sBAXzCT,EAAOH,M,MCGNa,MAPf,WACE,OACE,qBAAKR,UAAU,qB,MCMJS,MARf,SAAsBC,GACpB,OACE,qBAAKV,UAAU,gBAAf,SACE,gE,MCuDSW,MArDf,WAAgB,IAAD,EACaC,mBAAS,CACjCC,QAAS,GACTC,KAAM,QACNC,MAAO,KACPC,WAAW,IALA,mBACNC,EADM,KACCC,EADD,KASPC,EAAa,SAACN,GAClB,OAAOA,EAAQO,MAAK,SAACC,EAAEC,GACrB,OAAOA,EAAEL,EAAMH,MAAQO,EAAEJ,EAAMH,UAK7BS,EAAW,uCAAG,8BAAAF,EAAA,6DAClBH,EAAS,2BAAKD,GAAN,IAAaD,WAAW,EAAMD,MAAO,QAD3B,kBAGMjC,EAAsBC,qBAH5B,cAGV8B,EAHU,gBAIYrB,QAAQgC,IAAIX,EAAQY,IAAR,uCAAY,WAAOC,GAAP,eAAAL,EAAA,sEAC5BvC,EAAsBY,kBAAkBgC,EAAG/B,KADf,cAC5CgC,EAD4C,oDAEtCD,GAFsC,IAElC9B,IAAK+B,KAF6B,2CAAZ,wDAJxB,OAIVC,EAJU,OAQhBV,EAAS,2BAAKD,GAAN,IAAaJ,QAASM,EAAWS,GAAgBZ,WAAW,KARpD,kDAUhBE,EAAS,2BAAKD,GAAN,IAAaF,MAAM,EAAD,GAASC,WAAW,KAV9B,0DAAH,qDAmBjB,OALAa,qBAAU,WACRN,MACC,IAID,qCACE,wBAAQvB,UAAU,YAAlB,SACE,0DAEF,+BACE,0BAASA,UAAU,cAAnB,UACGiB,EAAMD,WAAa,cAAC,EAAD,IACnBC,EAAMF,OAAS,cAAC,EAAD,IACfE,EAAMJ,QAAQY,KAAI,SAACK,EAAGC,GAAJ,OACjB,cAAC,EAAD,CAAoBjC,OAAQgC,EAAG/B,SAAUgC,EAAI,GAAhCD,EAAEnC,iBC/C3BqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.46adf06a.chunk.js","sourcesContent":["const LeaderBoardApiService = {\n  getLeaderBoardData() {\n    return fetch(`https://us-central1-airin-rec-sandbox.cloudfunctions.net/leaderboard/`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then((res) => \n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.json()\n    );\n  },\n\n  getProfilePicture(uid) {\n    return fetch(`https://us-central1-airin-rec-sandbox.cloudfunctions.net/leaderboard/img/${uid}.png`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'image/png',\n      }\n    }).then((res) => \n      !res.ok ? res.json().then((e) => Promise.reject(e)) : res.url\n    )\n  }\n};\n\nexport default LeaderBoardApiService;","import React from 'react';\nimport './Player.css';\n\nfunction Player({ player, position }) {\n  \n  return (\n    <div key={player.uid} className=\"player-card\">\n      <span className=\"player-position\">{position}</span>\n      <img className=\"player-pic\" src={player.url} alt=\"profile pic\" />\n      <div className=\"player-content\">\n        <h2 className=\"player-heading\">{player.username}</h2>\n        <div className=\"player-content-inner\">\n          <p className=\"player-metric\">Score: {player.score}</p>\n          <p className=\"player-metric\">Playtime: {player.seconds_played}</p>\n        </div>\n        <div className=\"player-content-inner\">\n          <p className=\"player-metric\">Wins: {player.games_won}</p>\n          <p className=\"player-metric\">Losses: {player.games_lost}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;","import './Loading.css';\n\nfunction Loading() {\n  return (\n    <div className=\"loading-spinner\">\n    </div>\n  )\n}\n\nexport default Loading\n","import './ErrorMessage.css'\n\nfunction ErrorMessage(props) {\n  return (\n    <div className=\"error-message\">\n      <h2>Oops! Something Went Wrong!</h2>\n    </div>\n  );\n}\n\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport LeaderBoardApiService from '../../services/leader-board-api-service';\nimport Player from '../Player/Player';\nimport Loading from '../Loading/Loading';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport './App.css';\n\nfunction App() {\n  const [state, setState] = useState({\n    players: [],\n    view: 'score',\n    error: null,\n    isLoading: false,\n  })\n  \n  // Sorts players for high score (could be used for other metrics as well)\n  const handleSort = (players) => {\n    return players.sort((a,b) => {\n      return b[state.view] - a[state.view]\n    })\n  }\n\n  // Get page players data and profile picture\n  const getPageData = async () => {\n    setState({ ...state, isLoading: true, error: null })\n    try {\n      const players = await LeaderBoardApiService.getLeaderBoardData();\n      const playerDetails = await Promise.all(players.map(async (el) => {\n        const profile = await LeaderBoardApiService.getProfilePicture(el.uid)\n        return { ...el, url: profile}\n      }))\n      setState({ ...state, players: handleSort(playerDetails), isLoading: false })\n    } catch (error) {\n      setState({ ...state, error: error, isLoading: false })\n    }\n  }\n\n  useEffect(() => {\n    getPageData()\n  }, [])\n\n\n  return (\n    <>\n      <header className=\"lb-header\">\n        <h1>airin.ai ~ leaderboard</h1>\n      </header>\n      <main>\n        <section className=\"player-list\">\n          {state.isLoading && <Loading />}\n          {state.error && <ErrorMessage />}\n          {state.players.map((p, i) => (\n            <Player key={p.uid} player={p} position={i + 1}/>\n          ))}\n        </section>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}